openapi: 3.0.3
info:
  title: Newton.RS Rule Engine API
  description: |
    Newton.RS is a deterministic rule engine with LLM integration for auditable business rule validation and generation.
    
    
    ## Features
    - YAML/JSON rule definition language
    - Deterministic rule evaluation
    - Batch processing capabilities
    - Comprehensive audit logging
    - LLM-assisted rule generation
    - Real-time decision making
    - Step-based workflow execution
    
    ## Business Domains
    - E-commerce (discounts, loyalty, inventory)
    - Financial services (risk assessment, fraud detection)
    - Insurance (claims processing, underwriting)
    - Lending (credit decisions, risk management)
  version: 1.0.0

  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000
    description: Development server
  - url: https://your-domain.replit.app
    description: Production server

paths:
  /:
    get:
      summary: Web Interface
      description: Returns the interactive web interface for rule testing and management
      responses:
        '200':
          description: HTML web interface
          content:
            text/html:
              schema:
                type: string

  /api/ruleset/upload:
    post:
      summary: Upload Ruleset
      description: Upload and activate a new ruleset from JSON payload
      operationId: uploadRuleset
      tags:
        - Ruleset Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulesetUploadRequest'
            examples:
              ecommerce_rules:
                summary: E-commerce discount rules
                value:
                  content: |
                    version: "1.0"
                    rules:
                      - id: "premium_discount"
                        description: "Premium customer discount"
                        when:
                          type: "and"
                          conditions:
                            - type: "equals"
                              field: "customer_tier"
                              value: "premium"
                            - type: "greater_than"
                              field: "order_total"
                              value: 300
                        then:
                          outcome:
                            decision: "approve_discount"
                            discount_percent: 15
                  format: "yaml"
      responses:
        '200':
          description: Ruleset uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesetUploadResponse'
        '400':
          description: Invalid ruleset format or validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/ruleset/upload-file:
    post:
      summary: Upload Ruleset File
      description: Upload and activate a new ruleset from file upload
      operationId: uploadRulesetFile
      tags:
        - Ruleset Management
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: YAML or JSON ruleset file
      responses:
        '200':
          description: Ruleset uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesetUploadResponse'
        '400':
          description: Invalid file or ruleset format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/evaluate:
    post:
      summary: Evaluate Single Event
      description: Evaluate a single payload against the currently loaded ruleset
      operationId: evaluateSingle
      tags:
        - Rule Evaluation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationRequest'
            examples:
              ecommerce_evaluation:
                summary: E-commerce customer evaluation
                value:
                  payload:
                    customer_tier: "premium"
                    order_total: 350.00
                    item_count: 5
                    customer_id: "CUST_12345"
              financial_evaluation:
                summary: Financial transaction evaluation
                value:
                  payload:
                    transaction_amount: 25000.00
                    customer_id: "CUST_001"
                    transaction_type: "wire_transfer"
                    risk_score: "high"
              insurance_evaluation:
                summary: Insurance claim evaluation
                value:
                  payload:
                    claim_amount: 750.00
                    customer_fraud_history: false
                    claims_last_12_months: 1
                    claim_type: "auto"
      responses:
        '200':
          description: Evaluation completed successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DecisionResponse'
                  - type: "null"
              examples:
                matched_rule:
                  summary: Rule matched
                  value:
                    rule_id: "premium_customer_high_value"
                    outcome:
                      decision: "approve_discount"
                      discount_percent: 15
                      reason: "Premium customer qualifies for high-value discount"
                    matched_conditions:
                      - "customer_tier equals premium"
                      - "order_total >= 300"
                    elapsed_us: 1250
                    timestamp: 1704067200
                    rule_sha: "abc123def456"
                no_match:
                  summary: No rules matched
                  value: null
        '400':
          description: Invalid payload format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No ruleset loaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/evaluate-batch:
    post:
      summary: Evaluate Multiple Events
      description: Evaluate multiple events in a single request for improved performance
      operationId: evaluateBatch
      tags:
        - Rule Evaluation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEvaluationRequest'
            examples:
              mixed_scenarios:
                summary: Mixed business scenarios
                value:
                  events:
                    - customer_tier: "premium"
                      order_total: 350.00
                    - transaction_amount: 25000.00
                      risk_score: "high"
                    - claim_amount: 750.00
                      customer_fraud_history: false
      responses:
        '200':
          description: Batch evaluation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDecisionResponse'

  /api/ruleset/status:
    get:
      summary: Get Ruleset Status
      description: Get information about the currently loaded ruleset
      operationId: getRulesetStatus
      tags:
        - Ruleset Management
      responses:
        '200':
          description: Ruleset status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesetStatusResponse'
              examples:
                loaded_ruleset:
                  summary: Ruleset loaded
                  value:
                    loaded: true
                    sha: "abc123def456"
                    rules_count: 12
                    last_modified: "2024-01-01T12:00:00Z"
                no_ruleset:
                  summary: No ruleset loaded
                  value:
                    loaded: false
                    sha: null
                    rules_count: 0
                    last_modified: null

  /api/audit/log:
    get:
      summary: Get Audit Log
      description: Retrieve audit log entries showing rule changes and decisions
      operationId: getAuditLog
      tags:
        - Audit and Monitoring
      parameters:
        - name: limit
          in: query
          description: Number of entries to return
          required: false
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
        - name: since
          in: query
          description: ISO 8601 timestamp to filter entries after
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Audit log entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogResponse'

  /health:
    get:
      summary: Health Check
      description: System health and status endpoint for monitoring
      operationId: healthCheck
      tags:
        - System
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

components:
  schemas:
    RulesetUploadRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: YAML or JSON ruleset content
          example: |
            version: "1.0"
            rules:
              - id: "example_rule"
                when:
                  type: "equals"
                  field: "status"
                  value: "active"
                then:
                  outcome:
                    decision: "approve"
        format:
          type: string
          enum: ["yaml", "json"]
          default: "yaml"
          description: Format specification

    RulesetUploadResponse:
      type: object
      properties:
        message:
          type: string
          example: "Ruleset loaded successfully"
        sha:
          type: string
          description: SHA hash of the uploaded ruleset
          example: "abc123def456"
        rules_count:
          type: integer
          description: Number of rules in the ruleset
          example: 5

    EvaluationRequest:
      type: object
      required:
        - payload
      properties:
        payload:
          type: object
          description: Data payload to evaluate against rules
          additionalProperties: true
          example:
            customer_tier: "premium"
            order_total: 350.00
            item_count: 5

    BatchEvaluationRequest:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          description: List of events to evaluate
          items:
            type: object
            additionalProperties: true
          example:
            - customer_tier: "premium"
              order_total: 350.00
            - transaction_amount: 25000.00
              risk_score: "high"

    DecisionResponse:
      type: object
      properties:
        rule_id:
          type: string
          description: Identifier of the matched rule
          example: "premium_customer_high_value"
        outcome:
          type: object
          description: Decision outcome from the rule
          additionalProperties: true
          example:
            decision: "approve_discount"
            discount_percent: 15
            reason: "Premium customer qualifies for discount"
        matched_conditions:
          type: array
          description: List of conditions that were matched
          items:
            type: string
          example:
            - "customer_tier equals premium"
            - "order_total >= 300"
        elapsed_us:
          type: integer
          description: Evaluation time in microseconds
          example: 1250
        timestamp:
          type: integer
          description: Unix timestamp of evaluation
          example: 1704067200
        rule_sha:
          type: string
          description: SHA hash of the ruleset used
          example: "abc123def456"

    BatchDecisionResponse:
      type: object
      properties:
        decisions:
          type: array
          description: Array of decision responses, null for no matches
          items:
            oneOf:
              - $ref: '#/components/schemas/DecisionResponse'
              - type: "null"

    RulesetStatusResponse:
      type: object
      properties:
        loaded:
          type: boolean
          description: Whether a ruleset is currently loaded
          example: true
        sha:
          type: string
          nullable: true
          description: SHA hash of current ruleset
          example: "abc123def456"
        rules_count:
          type: integer
          description: Number of rules in current ruleset
          example: 12
        last_modified:
          type: string
          format: date-time
          nullable: true
          description: Last modification timestamp
          example: "2024-01-01T12:00:00Z"

    AuditLogResponse:
      type: object
      properties:
        entries:
          type: array
          description: Audit log entries
          items:
            $ref: '#/components/schemas/AuditEntry'
        total:
          type: integer
          description: Total number of entries returned
        limit:
          type: integer
          description: Limit used for query
        since:
          type: string
          format: date-time
          nullable: true
          description: Since timestamp used for filtering

    AuditEntry:
      type: object
      properties:
        id:
          type: integer
          description: Unique entry identifier
        rule_sha:
          type: string
          description: SHA hash of associated ruleset
        author:
          type: string
          description: Author of the change
        timestamp:
          type: string
          format: date-time
          description: Entry timestamp
        prompt_sha:
          type: string
          nullable: true
          description: SHA hash of LLM prompt (if applicable)
        llm_model:
          type: string
          nullable: true
          description: LLM model used (if applicable)
        diff_url:
          type: string
          nullable: true
          description: URL to rule diff (if applicable)
        content:
          type: string
          description: Entry content or description
        type:
          type: string
          enum: ["ruleset_change", "decision"]
          description: Type of audit entry

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["healthy", "degraded", "unhealthy"]
          example: "healthy"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        version:
          type: string
          example: "1.0.0"
        features:
          type: object
          description: Feature availability status
          properties:
            rule_engine:
              type: boolean
              example: true
            audit_logging:
              type: boolean
              example: true
            llm_integration:
              type: boolean
              example: true
            batch_processing:
              type: boolean
              example: true

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code identifier
              enum:
                - "VALIDATION_ERROR"
                - "EVALUATION_ERROR"
                - "NO_RULESET_LOADED"
                - "INVALID_PAYLOAD"
                - "INTERNAL_ERROR"
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: Human-readable error message
              example: "Rule validation failed"
            details:
              type: array
              description: Detailed error information
              items:
                type: string
              example:
                - "Rule 'invalid_rule' missing required field 'then'"
                - "Condition type 'unknown_type' not supported"

  examples:
    EcommerceRuleset:
      summary: E-commerce business rules
      description: Complete ruleset for e-commerce scenarios including discounts, loyalty, and bulk orders
      value:
        content: |
          version: "1.0"
          rules:
            - id: "premium_customer_high_value"
              description: "Premium customers get 15% discount on orders over $300"
              tags: ["ecommerce", "discount", "premium"]
              when:
                type: "and"
                conditions:
                  - type: "equals"
                    field: "customer_tier"
                    value: "premium"
                  - type: "greater_than_equal"
                    field: "order_total"
                    value: 300
              then:
                outcome:
                  decision: "approve_discount"
                  discount_percent: 15
                  reason: "Premium customer high-value order discount"
            
            - id: "bulk_order_discount"
              description: "Bulk orders over 10 items get 8% discount"
              tags: ["ecommerce", "bulk", "discount"]
              when:
                type: "greater_than"
                field: "item_count"
                value: 10
              then:
                outcome:
                  decision: "approve_discount"
                  discount_percent: 8
                  reason: "Bulk order discount applied"
        format: "yaml"

    FinancialRuleset:
      summary: Financial risk assessment rules
      description: Risk management rules for financial transactions
      value:
        content: |
          version: "1.0"
          rules:
            - id: "high_value_transaction_review"
              description: "Transactions over $20,000 require manual review"
              tags: ["finance", "risk", "compliance"]
              when:
                type: "greater_than_equal"
                field: "transaction_amount"
                value: 20000
              then:
                outcome:
                  decision: "require_manual_review"
                  escalation_level: "tier_2"
                  review_deadline_hours: 4
                  reason: "High-value transaction requires review"
        format: "yaml"

tags:
  - name: Ruleset Management
    description: Operations for uploading and managing rulesets
  - name: Rule Evaluation
    description: Operations for evaluating payloads against rules
  - name: Audit and Monitoring
    description: Operations for accessing audit logs and monitoring
  - name: System
    description: System health and status operations